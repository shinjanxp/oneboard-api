module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 11,
    tsconfigRootDir: __dirname,
    project: 'tsconfig.json',
    sourceType: 'module',
  },
  ignorePatterns: ['node_modules',
                   'dist'],
  plugins: [
    '@typescript-eslint/eslint-plugin',
    'jest',
    'import'
  ],
  extends: [
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:jest/recommended',
    'plugin:jest/style',
    'plugin:import/errors',
    'plugin:import/warnings',
    'plugin:import/typescript',
  ],
  root: true,
  env: {
    node: true,
    jest: true,
  },
  rules: {
    '@typescript-eslint/array-type': ['error', { default: 'array-simple' }],
    '@typescript-eslint/brace-style': ['error', '1tbs', {'allowSingleLine': true}],
    '@typescript-eslint/comma-spacing': ['error'],
    '@typescript-eslint/indent': ['error', 2],
    '@typescript-eslint/naming-convention': ['error'],
    '@typescript-eslint/no-type-alias': ['error'],
    '@typescript-eslint/no-unnecessary-boolean-literal-compare': ['error'],
    '@typescript-eslint/no-unnecessary-condition': ['error'],
    '@typescript-eslint/no-unsafe-call': ['error'],
    '@typescript-eslint/no-unsafe-member-access': ['error'],
    '@typescript-eslint/no-unsafe-return': ['error'],
    '@typescript-eslint/no-unused-vars': ['error', {'args': 'none'}],
    '@typescript-eslint/prefer-for-of': ['warn'],
    '@typescript-eslint/prefer-optional-chain': ['error'],
    '@typescript-eslint/promise-function-async': ['error'],
    '@typescript-eslint/restrict-plus-operands': ['error'],
    '@typescript-eslint/restrict-template-expressions': ['error', {allowNumber: true, allowBoolean: true}],
    '@typescript-eslint/semi': ['error'],
    '@typescript-eslint/switch-exhaustiveness-check': ['error'],
    'array-bracket-spacing': ['error', 'never'],
    'arrow-body-style': ['error', 'as-needed'],
    'arrow-parens': ['error'],
    'arrow-spacing': ['error'],
    'block-spacing': ['error', 'always'],
    'comma-dangle': ['error', 'only-multiline'],
    'consistent-return': ['error', {'treatUndefinedAsUnspecified': true}],
    'dot-location': ['error'],
    'dot-notation': ['error'],
    'eqeqeq': ['error'],
    'generator-star-spacing': ['error'],
    'key-spacing': ['error'],
    'keyword-spacing': ['error'],
    'max-statements': ['warn', 32],
    'multiline-comment-style': ['error'],
    'new-parens': ['error'],
    'no-confusing-arrow': ['warn'],
    'no-duplicate-imports': ['error'],
    'no-implicit-coercion': ['error'],
    'no-labels': ['error'],
    'no-lonely-if': ['error'],
    'no-mixed-operators': ['error'],
    'no-multi-spaces': ['error'],
    'no-self-compare': ['error'],
    'no-sequences': ['error'],
    'no-shadow': ['error', { 'builtinGlobals': true}],
    'no-tabs': ['error'],
    'no-trailing-spaces': ['error'],
    'no-var': ['error'],
    'prefer-arrow-callback': ['error'],
    'prefer-const': ['error', {'destructuring': 'any'}],
    'prefer-regex-literals': ['warn'],
    'prefer-rest-params': ['error'],
    'prefer-template': ['error'],
    'semi-spacing': ['error'],
    'semi-style': ['error'],
    'space-infix-ops': ['error'],
  },
};
